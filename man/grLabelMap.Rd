% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/grUtils.R
\name{grLabelMap}
\alias{grLabelMap}
\title{Add a category column to a GRange object}
\usage{
grLabelMap(gr, binEnds, column = 1, brewerPaletteName = "RdBu",
  labels = rev(brewer.pal(length(binEnds) - 1, brewerPaletteName)),
  as.column = "exonColor", annotate = TRUE)
}
\arguments{
\item{gr}{The GRanges object to annotate.}

\item{binEnds}{The sequence of cut-points defining the bins into which the
  data will be split. Each bin will correspond to a label in the provided
  labels vector or color palette, providing a mapping of each value to a
  label or color. Values exactly matching bin ends will be in the lower bin.
  NAs or values outside the range will map to NAs. Normally the first and
  last bin ends are the special values Inf and -Inf. Note: bin ends will be
  sorted from smallest to largest before mapping, so make sure lables are
  ordered to match}

\item{column}{The metadata column in the GRange object to determine labels
from. Can specify the column by name or by (metadata) column index.
 map. Defaults to 1.}

\item{brewerPaletteName}{The name of the RColorBrewer palatte to use for bin
labels, by default 'RdBu'. Setting labels causes this to be ignored.}

\item{labels}{The vector of labels to use as bin names. The number of colors will
have to be one less than the number of bin ends. If specified, brewerPaletteName is ignored}

\item{as.column}{The name of the metadata column added to the GRanges object.}
}
\value{
the GRanges object with the new column added, or if annotate is set
  FALSE, just the label (color) vector.
}
\description{
Adds a column of labels as metadata to a GRanges object, mapped from an
existing column of numeric metadata. Which column to map can be specified by
column name or index. The data from that column will be binned based on the
given binEnds and the matching bin label will be used. By default assumes you
are assinging a color map using a colorBrewere pallete, but any category
labels can be used. To add a category column based on an external vector,
just use sortDataIntoBins and grAddColumn.
}
\section{Color Brewer Palletes}{


  If no labels are specified, a vector of colors will be assigned using the
  brewer palette named (RdBu if none specified). The number of colors needed
  will be determined automatically from the binEnds provided. To use
  different colors, just specify them manually as bin labels. Doing so is no
  different than assigning any lables, colors or otherwise. The color brewer
  palette is just a convienient shortcut and is ignored if labels are given.
  If no version of the given palette has the number of levels required by the
  bin ends an error will occur.

  For diverging values, can have 3 - 11 bins, allowed values are

  BrBG PiYG PRGn PuOr RdBu RdGy RdYlBu RdYlGn Spectral.

  For sequential values, can have 3 - 8 value, allowed values are:

  Blues BuGn BuPu GnBu Greens Greys Oranges OrRd PuBu PuBuGn PuRd Purples
  RdPu Reds YlGn YlGnBu YlOrBr YlOrRd.

  For qualitative palletes, can have 3 to (n) where n varies by palette:

  Accent (8), Dark2 (8), Paired (12), Pastel1 (9), Pastel2 (8), Set1 (9),
  Set2 (8), Set3 (12)
}
\examples{
# Display available palletes.
library(RColorBrewer);
display.brewer.all()
}

