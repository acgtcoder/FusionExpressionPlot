% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gafGeneModels.R
\name{extractGeneModels}
\alias{extractGeneModels}
\title{Extract gene models from the GAF}
\usage{
extractGeneModels(gaf, outFile = paste0(gaf, ".geneModels"), force = FALSE,
  uniqueGene = TRUE, skipUnknownGene = TRUE)
}
\arguments{
\item{gaf}{The full-path name of the GAF [REQ]}

\item{outFile}{The output filename. By default will be the same as the
  GAF, with ".geneModels" appended (hence it will be created in the same
  directory by default). This will not overwrite an existing file unless
  \code{force = TRUE}.}

\item{force}{If the output file exists, setting this \code{TRUE} will allow
overwriting it. Doing so generates a warning.}

\item{uniqueGene}{By default this is \code{TRUE} and only one copy of every
  gene will be kept. This makes the gene name a unique key. The GAF contains
  additional versions of some genes which are skipped. See the GAF gene names
  section below for more information.}

\item{skipUnknownGene}{By default this is \code{TRUE} and the unknown genes
  (those whose names in the GAF are "?") are dropped. See the GAF gene names
  section below for more information. Note that this setting is over-ridden
  to \code{TRUE} with a warning if \code{uniqueGene= TRUE} as all these genes
  have the same gene name ("?").}
}
\value{
The main output is the GAF gene mode extract file, which is by
  default just the genes with unique names. See
  \href{https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/other/GAF/GAF_bundle_Feb2011/docs/GAF_v2_file_description.docx}{GAF_v2_file_description.docx}
   However, this function will returns a list with some summary info about
  the GAF and the generated geneModels file:

  \tabular{ll}{
     \code{$gaf}        \tab The GAF filename used as a parameter (relative filename).\cr
     \code{$gaf_real}   \tab The absolute full path filename to the input GAF.\cr
     \code{$gaf_md5}    \tab The md5 checksum of the GAF, as a string.\cr
     \code{$uniqueGene} \tab The \code{uniqueGene} parameter setting used.\cr
     \code{$skipUnknownGene} \tab The \code{skipUnknownGene} parameter setting used.\cr
     \code{$gaf_lines}       \tab The number of lines in the GAF.\cr
     \code{$gaf_models}      \tab The number of models in the GAF. [Currently this
        does not include unknown genes if \code{skipUnknownGene= TRUE}].\cr
     \code{$gaf_models_unique} \tab The number of unique models in the GAF. Will
        be \code{NA} if \code{uniqueGene= FALSE}.\cr
     \code{$gaf_extract}      \tab The output filename, based on the input GAF by default.\cr
     \code{$gaf_extract_real} \tab The absolute full path filename of the output file.\cr
     \code{$gaf_extract_md5}  \tab The md5 checksum of the output file.\cr
  }
}
\description{
This extracts a tab delimited file of all canonical exon gene models from the
TCGA gene annotation file or \acronym{GAF}. The canonical model is intended to be at
least a common starting point for a simplified definition of "the gene called
X", based on the union of all transcript. By default each model in the output
file (row) is uniquely identified by gene name.
}
\details{
This function is implemented using a unix system command and requires the
"grep" program, so this only works on linux/mac systems. [TODO - reimplement
in pure R.] The GAF version this works with is the version used for the
TCGA RNAseq expression data files. It is available for download at the NCI
uncompressed:
\href{https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/other/GAF/GAF.hg19.June2011.bundle/outputs/TCGA.hg19.June2011.gaf}{TCGA.hg19.June2011.gaf}
or gzipped:
\href{https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/other/GAF/GAF.hg19.June2011.bundle/outputs/TCGA.hg19.June2011.gaf.gz}{TCGA.hg19.June2011.gaf.gz}
}
\section{GAF gene names}{

  Some genes in the GAF have multiple variants with the same name. These are
  annotated like "1ofN", "2ofN", etc. By default only the "...1of" variant
  is kept. Setting \code{uniqueGene= FALSE} will keep all variants. Gene name will
  not then be a unique key.

  Some genes in the GAF have no known name and are annotated as "?". Some of
  these have multiple versions also. There are 32 such genes in the GAF. By
  default non of these are kept. If \code{uniqueGene= FALSE} is set, these
  will still be skipped unless \code{skipUnknownGene= FALSE} is also set.
  There is no way to keep these genes while skipping the variants of the
  named genes.

  The gene "SLC35E2" is present twice, but without a numbered annotation. By
  default, only the larger (encompassing) version of "SLC35E2" is kept.
  If \code{uniqueGene= FALSE} is set, then both versions of this gene will be
  kept, regardless of the \code{skipUnknownGene} setting.
}

\section{Errors}{

   These errors are fatal and will terminate processing.

\describe{
   \item{
      \command{Unsafe character in GAF filename!}
   }{
      An invalid characters was passed as part of the GAF filename. This is
      important as the filename is used in a system command as a parameter
      and could be used for command injection.
   }
   \item{
      \command{Can't find the specified GAF: "\var{file}"}
   }{
      The specified GAF doesn't seem to exist on the file system.
      Probably have the name wrong or are using a relative name from the
      wrong directory, but could also be that permissions are hiding it.
   }
   \item{
      \command{Unsafe character in output geneModel filename!}
   }{
      An invalid characters was passed as part of the output filename. This
      is important as the filename is used in a system command as a parameter
      and could be used for command injection.
   }
   \item{
      \command{Output file already exists; use force= TRUE to overwrite: "\var{file}"}
   }{
      The specified GAF gene extract output file already exists. You probably
      don't want to overwrite it. However, you can set \code{force= TRUE}
      to allow this. It will still generate a warning.
   }
}
}

\section{Warnings}{


\describe{
   \item{
      \command{Forcing overwrite of output file: "\var{file}"}
   }{
      Just letting you know an existing file is actually being overwritten.
      This won't happen unless explicitly allowed by setting \code{force=
      TRUE}). Having a warning allows distinguishing between the cases where
      an overwrite occurred vs those where one was allowed but did not occur.
   }
   \item{
      \command{uniqueGene=TRUE sets skipUnknownGene=TRUE}
   }{
      You can't have unique gene names if you keep the genes without names. I
      could just blow up, but I'm just going to assume that since you asked
      for unique gene names, that's what you really want. That means I have
      to ignore your request to keep the unknown genes. Not what you wanted?
      That's why I'm warning you.
   }
   \item{
      Various warnings from failed system commands
   }{
      System commands are used for several things in this function. If they
      fail, error messages are returned as warnings.
   }

}
}

