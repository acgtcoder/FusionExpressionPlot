% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/systemRunUtils.R
\name{is.safeFileName}
\alias{is.safeFileName}
\title{Verify that a fileName is safe for use in shell commands.}
\usage{
is.safeFileName(names, exists = NULL, weak = FALSE, okSpace = TRUE,
  okTilde = TRUE, okBackslash = FALSE, okComma = FALSE, okColon = FALSE)
}
\arguments{
\item{names}{A vector of filenames to check.}

\item{exists}{NULL Can set \code{TRUE} to ensure file exists, or \code{FALSE}
to ensure file does NOT exist. (Note, don't rely on this as only error check for
reading/writting file as that introduces a race condition).}

\item{weak}{default this is \code{FALSE} and
validation is done using white-listed characters. Set \code{TRUE} to do
validation using blacklisted characters. See Valid names below for
additional info}

\item{okSpace}{Set \code{TRUE} to ban a space. Allows " " by default.}

\item{okTilde}{Set \code{TRUE} to ban a tilde. Allows "~" by default
  (anywhere!).}

\item{okBackslash}{Set \code{TRUE} to allow a backslash. No \code{\\} are
  allowed by default.}

\item{okComma}{Set \code{TRUE} to allow a comma. No \code{,} are allowed by
  default.}

\item{okColon}{Set \code{TRUE} to allow a colon. No \code{:} are allowed by
  default.}
}
\value{
Returns a vector of booleans the same length as the input names,
  TRUE if the file is safe, FALSE if it fails any test.
}
\description{
Validates filenames for use in system commands. Allows for either blacklist
and whitelist filtering, and independently controls several characters in
common use in filenames that could be dangerous in some contexts. Optionally
may also require a filename to exist or not to exist.
}
\section{Valid names}{


   Filtering at a single character level will catch most bad names:

   \tabular{ll}{
      Always bad \tab \command{` $ ( ) | ; & > <}\cr
      Always ok \tab \command{ A:Z a:z 0:9 _ . - / }\cr
      Can set bad \tab \command{" "} (space)\cr
      Can set bad \tab \command{~} (tilde will be allowed anywhere)\cr
      Can set ok \tab \command{\\ , :}\cr
      May not start with \tab \command{+ -}\cr
   }
   In addition, no filename may contain either \code{" -"} or \code{" +"} ( the
   \code{-} or \code{+} character preceded by a space.) This prevents injecting
   new options.

   By default, whitelist validation is used. Files may only use charcters
   explicitly allowed. Can switch to blacklist validation by setting \code{weak=
   TRUE}, which allows any character not explicitly banned.
}

