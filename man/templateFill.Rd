% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/stringUtils.R
\name{templateFill}
\alias{templateFill}
\title{Evaluate and fill string templates}
\usage{
templateFill(x, delim = c("{{", "}}"), as.R = FALSE,
  envir = new.env(parent = parent.frame()))
}
\arguments{
\item{x}{Vector of strings with fields containing variables or code to be
  interpolated.}

\item{delim}{Vector of two string, the first used to signal the start of a
template section and the second used to signal the end. These may not be
the same, nor have one embedded in the other/ By default the delimiers are
c( "{{", "}}" )}

\item{as.R}{Set TRUE to allow full R code evaluation. By default is FALSE and
  only allows variable substitution. Setting this true is a security risk
  when you don't trust the provider of the template text as much as you trust
  the person who provided your R code, so it generates a warning.}

\item{envir}{The execution environment to be used. Can be used to pass in the
  an environment in which variables are defined for use in interpolation. If
  not specified, then by default this will be a new environment whose parent
  is the callers environment, as returned by parent.frame(). Variables
  visible in the calling function (or set there) will be avialble for use in
  the template. Note that although R code will normally only set or change
  variables in this frame when evaluated, it can set or change variables at
  any level, hence malicous or careless as.R evaluated templates can leak or
  interfere with other R variables in your code (or indeed in any other
  package or even system code). With great power comes great responsibility.}
}
\value{
A copy of the original vector of strings, but with variable names
  replaced with their values, or with the result of evaluating the
  interpolated string as R code. Note that everything is returned as a
  string, so '{1+1}' is returned as '2'.
}
\description{
Given a vector of strings containing {{variables}} and returns a copy
replacing the templated fields with the value of the specified variables.
Variables must be defined in the calling environment (or the one passed in),
or an error will occur. If as.R is set TRUE, then any {{R code}} can be used
and it will be evaluated to obtain a return value. That is, of course,
dangerous if you don't trust the source of your template. This code is
executed as if run in new function called in the current environment (or the
one passed in).
}

